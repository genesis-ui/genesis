!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("ReactDOM")):"function"==typeof define&&define.amd?define(["ReactDOM"],t):"object"==typeof exports?exports.Genesis=t(require("ReactDOM")):e.Genesis=t(e.ReactDOM)}(self,(e=>(()=>{"use strict";var t={745:(e,t,n)=>{var s=n(314);t.s=s.createRoot,s.hydrateRoot},314:t=>{t.exports=e}},n={};function s(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,s),i.exports}s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{s.r(r),s.d(r,{Abstract:()=>g,App:()=>f,Compliance:()=>x,Exception:()=>O,Model:()=>w,Resolvable:()=>I});class e extends Error{message;bindableName;name="BindingException";constructor(e,t){super(e),this.bindableName=t}}class t extends Error{message;bindableName;name="BindingResolutionException";constructor(e,t){super(e),this.bindableName=t}}class n{static#e={};static#t={};static#n={};clear(e){return n.#n[e]&&delete n.#n[e],n.#t[e]&&delete n.#t[e],n.#e[e]&&delete n.#e[e],this}resolve(e,s,r=[]){if(n.#n[e])return n.#n[e](s,...r);if(n.#t[e]){const t=n.#t[e](s,...r);return this.clear(e),this.bindInstance(e,t),this.resolve(e)}if(n.#e[e])return n.#e[e];throw new t('[GenesisUI] Could not resolve a bindable or instance from "'+e+'"')}bind(t,s){if("function"!=typeof s)throw new e('[GenesisUI] Could not bind: Bindable must be wrapped by a "function"',t);return this.clear(t),n.#n[t]=s,this}bindSingleton(t,s){if("function"!=typeof s)throw new e('[GenesisUI] Could not bind singleton: Bindable must be wrapped by a "function"',t);return this.clear(t),n.#t[t]=s,this}bindInstance(e,t){return this.clear(e),n.#e[e]=t,this}}class i extends Error{name="RuntimeException";constructor(e){super(e)}}class o extends Error{baseClassName;extendingClassName;methodName;name="MethodNotImplementedException";constructor(e,t,n,s){super(e),this.baseClassName=t,this.extendingClassName=n,this.methodName=s}}class a{#s;constructor(e){this.#s=e}_notImplemented(e,t=null){throw t=t??this.#s,new o('Class "'+this.constructor.name+'" must implement abstract method "'+e+'" of class "'+t+'"',t,this.constructor.name,e)}static _notImplemented(e,t){(new this)._notImplemented(e,t)}}class c{static#r={};add(e,t,n,s){return this.#i(e,t),c.#r[e][t][n]=s,this}#i(e,t){c.#r?.[e]||(c.#r[e]={}),c.#r[e]?.[t]||(c.#r[e][t]={})}trans(e,t,n){return c.#r?.[e]?.[t]?.[n]??t+"::"+n}search(e,t){const n=e.split("::");if(2!==n.length)return null;const s=n[0],r=n[1],i=c.#r?.[t]?.[s];if(!i)return null;let o={};for(const[e,t]of Object.entries(i))-1!==e.indexOf(r)&&(o[e]=t);return o.length>0?o:null}}class d extends a{_app;constructor(e){super("GenesisUI::Providers::AbstractServiceProvider"),this._app=e}boot(){this._notImplemented("boot")}register(){this._notImplemented("register")}addListener(e,t,n=!1){return document.addEventListener("gui.done",(n=>{document.addEventListener(e,(e=>{(new t).handle(e)}))})),this}addTranslations(e,t){const n=new c;for(const[s,r]of Object.entries(e))for(const[e,i]of Object.entries(r))n.add(t,s,e,i)}}class l{static#o=[];static#a=[];register(e){Array.isArray(e)||(e=[e]);for(const t of e){if(!(t instanceof d))throw new i('[GenesisUI] Service-Provider must be an instance of "AbstractServiceProvider"');l.#o.push(t)}}get(){return l.#o}getDynamicProvidersUrls(){return l.#a}}class u extends Error{name="OperationNotAllowedException";constructor(e){super(e)}}const b={en:{genesis:{}}};class p extends d{boot(){}register(){for(const[e,t]of Object.entries(b))this.addTranslations(t,e)}}class m{#c;#d=[];constructor(e){this.#c=e}#l=[p];#u(e){let t=0;for(let n of e){const e=new n(this.#c);e.boot(),this.#d.push(e),t++}return t}#b(){for(const e of this.#d)e.register()}bootstrap(){let e=this.#u(this.#l)+this.#u((new l).get());return this.#b(),this.#d=[],e}}var h=s(745);class f{static VERSION="v0.0.1";static REACT_VERSION=18;static#p;#m=!1;#h;#f;constructor(){this.#h=new n}static getInstance(){return this.#p}getRootElementId(){return this.#f}register(e=null){if(this.#m)throw new u("[GenesisUI] Operation not allowed: Cannot register service-providers after instance was initialized");if(!e)return;const t=new l;Array.isArray(e)||(e=[e]);let n=[];for(const t of e){if(!(t instanceof d))throw new i("[GenesisUI] Invalid service-provider");n.push(t)}t.register(n)}bind(e,t){this.#h.bind(e,t)}bindSingleton(e,t){this.#h.bindSingleton(e,t)}bindInstance(e,t){this.#h.bindInstance(e,t)}make(e){return this.#h.resolve(e,this)}init(){return new Promise(function(e,t){if(!this.#m)return this.#m=!0,void e(new m(this).bootstrap());t(new u("[GenesisUI] Instance already initialized"))}.bind(this))}render(e){if(!this.#m)throw new u("[GenesisUI] Builder must be initialized before rendering");this.#f=e,f.#p=this,(0,h.s)(document.getElementById(e)).render(),document.dispatchEvent(new Event("gui.done"))}}const v=function(){const e=window?.React?.version,t=null!==e;if(!t)return{is_present:t};const n=e.split("-"),s=n[1]+"-"+n[2],r=n[0].split("."),i=r[0],o=r[1]+"."+r[2];return{is_present:t,major:Number(i),minor:o,versions:r,hash:s,raw:e}}();class I{#v;#I;constructor(e,t=[]){this.#v=e,this.#I=t}make(e,n={}){let s;const r=Object.entries(n).filter((([e,t])=>this.#I.includes(e)));try{s=e.make(this.#v,r)}catch(e){if(!e instanceof t||"string"==typeof this.#v)throw e;try{s=new s}catch(e){throw new t('[GenesisUI] Could not resolve a bindable or instance from "'+s+'"')}}return s}}const g={Class:a,Trait:class extends a{_staticObject;constructor(e){super("GenesisUI::Abstract::AbstractTrait"),this._staticObject=e,this.define()}define(){this._notImplemented("define")}},Traits:class{static use(e,t){for(const n of t)new n(e)}},Enum:class{static create(e,t){for(const[n,s]of Object.entries(t))Object.defineProperty(e,n.toString(),{value:s,writable:!1,enumerable:!0,configurable:!1})}static from(){}},ServiceProvider:d,Listener:class extends a{constructor(){super("GenesisUI::Listeners::AbstractListener")}handle(e){this._notImplemented("handle")}}},w={Classname:class{#g;constructor(e){this.#g=e}combine(){let e="";for(let t of this.#g)t&&("string"==typeof t&&(t=t.split(" ")),e+=t.join(" ")+" ");return e}}},x={React:v},O={BindingException:e,BindingResolutionException:t,MethodNotImplementedException:o,OperationNotAllowedException:u,RuntimeException:i}})(),r})()));